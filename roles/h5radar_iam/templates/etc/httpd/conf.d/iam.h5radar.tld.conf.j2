#{{ ansible_managed }}
<VirtualHost *:80>
    ServerName {{ h5radar_iam__domain }}
    ServerAdmin {{ h5radar_iam__mail }}
    ServerSignature EMail

    # LogLevel alert rewrite:trace3
{% if ansible_os_family == 'RedHat' %}
    CustomLog logs/{{ h5radar_iam__domain }}_access_log "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
    ErrorLog logs/{{ h5radar_iam__domain }}_error_log
{% else %}
    CustomLog /var/log/apache2/{{ h5radar_iam__domain }}_access_log "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
    ErrorLog /var/log/apache2/{{ h5radar_iam__domain }}_error_log
{% endif %}

    DocumentRoot "{{ h5radar_iam__current_path }}/public"

    RewriteEngine on
    # Rules for acme-challenge
    RewriteCond %{REQUEST_URI} ^\/\.well-known/acme-challenge(.*)$
    RewriteRule ^\/\.well-known\/acme-challenge(.*)$ /var/www/html/%{REQUEST_URI} [QSA,L]

    # Rules for https redirection
    RewriteCond %{HTTPS} off
    RewriteRule ^(.*)$ https://{{ h5radar_iam__domain }}%{REQUEST_URI} [R=301]
</VirtualHost>


<VirtualHost *:443>
    ServerName {{ h5radar_iam__domain }}
    ServerAdmin {{ h5radar_iam__mail }}
    ServerSignature EMail

    # Custom error pages
    ErrorDocument  404 /404.var
    ErrorDocument  503 /503.var

    # Setup settings
    LimitRequestLine 2061
    MIMEMagicFile /dev/null
    AddType application/octet-stream .msi
    AddOutputFilterByType DEFLATE text/html image/svg+xml

    # LogLevel alert rewrite:trace3
{% if ansible_os_family == 'RedHat' %}
    CustomLog logs/{{ h5radar_iam__domain }}_ssl_access_log "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
    ErrorLog logs/{{ h5radar_iam__domain }}_ssl_error_log
{% else %}
    CustomLog /var/log/apache2/{{ h5radar_iam__domain }}_ssl_access_log "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-agent}i\""
    ErrorLog /var/log/apache2/{{ h5radar_iam__domain }}_ssl_error_log
{% endif %}

    SSLEngine on
{% if ansible_os_family == 'RedHat' %}
    SSLCertificateFile /etc/httpd/certs/{{ h5radar_iam__domain }}/cert.pem
    SSLCertificateKeyFile /etc/httpd/certs/{{ h5radar_iam__domain }}/privkey.pem
    SSLCertificateChainFile /etc/httpd/certs/{{ h5radar_iam__domain }}/fullchain.pem
{% else %}
    SSLCertificateFile /etc/apache2/certs/{{ h5radar_iam__domain }}/cert.pem
    SSLCertificateKeyFile /etc/apache2/certs/{{ h5radar_iam__domain }}/privkey.pem
    SSLCertificateChainFile /etc/apache2/certs/{{ h5radar_iam__domain }}/fullchain.pem
{% endif %}

    DocumentRoot "{{ h5radar_iam__current_path }}/public"
    # Content neg. support(required modules: mod_alias, mod_setenvif, mod_negotiation)
    <Directory "{{ h5radar_iam__current_path }}/public">
        Options  +FollowSymLinks
        Order allow,deny
        Allow from all
        AllowOverride All
        Require all granted
        <Files *.var>
            SetHandler type-map
        </Files>
        LanguagePriority en ru
        ForceLanguagePriority Prefer Fallback
    </Directory>

    # Set type and headers for *.css.gz file
    <FilesMatch \.css\.gz$>
        ForceType text/css
        Header set Content-Encoding gzip
        Header add Vary Accept-Encoding
    </FilesMatch>

    # Set type and headers for *.js.gz file
    <FilesMatch \.js\.gz$>
        ForceType application/javascript
        Header set Content-Encoding gzip
        Header add Vary Accept-Encoding
    </FilesMatch>

    SSLProxyEngine on
    ProxyAddHeaders on
    ProxyPreserveHost on

    # Proxy application
    ProxyPass / https://127.0.0.1:{{ h5radar_iam__keycloak_port }}/
    ProxyPassReverse / httsp://127.0.0.1:{{ h5radar_iam__keycloak_port }}/

    RewriteEngine on
    # Rewrite rules for setup maintenance mode
    RewriteCond %{DOCUMENT_ROOT}/maintenance -f
    RewriteCond %{REQUEST_URI} !(^\/maintenance\.(.*)|\.(css|jpg|png|gif))$
    RewriteRule ^(.*)$ /maintenance.var [R=307,L]

    # Rewrite rules for discard maintenance mode
    RewriteCond %{DOCUMENT_ROOT}/maintenance !-f
    RewriteCond %{REQUEST_URI} \/maintenance\.var
    RewriteRule ^(.*)$ / [R=301,L]

    # Rules for static content from public
    RewriteCond %{DOCUMENT_ROOT}/%{REQUEST_URI} -f
    RewriteRule ^(.*)$ %{REQUEST_URI} [QSA,L]
</VirtualHost>
