#!/bin/sh
# The grep may return 1, this is reason to disable -e flag
# set -e

for domain in $RENEWED_DOMAINS; do
    case $domain in
    {{ h5radar_iam__domain }})

        # Delete certs if it has been imported before
        keytool -list -cacerts -storepass {{ h5radar_iam__keytool_password }} \
          | grep "{{ h5radar_iam__domain }}"
        if [ $? -eq 0 ]; then
          keytool -delete -noprompt -cacerts -alias {{ h5radar_iam__domain }} \
            -storepass {{ h5radar_iam__keytool_password }}
        fi

        # Import a new certs
        keytool -import -noprompt -cacerts -alias {{ h5radar_iam__domain }} \
          -file $RENEWED_LINEAGE/cert.pem -storepass {{ h5radar_iam__keytool_password }}
        keytool -list -cacerts -alias {{ h5radar_iam__domain }} \
          -storepass {{ h5radar_iam__keytool_password }}

        # Set path for certificates
        daemon_cert_root={{ h5radar_iam__shared_path }}/certs

        # Make sure the certificate and private key files are
        # never world readable, even just for an instant while
        # we're copying them into daemon_cert_root.
        umask 077

        # Copy certificates
        mkdir -p $daemon_cert_root
        cp "$RENEWED_LINEAGE/privkey.pem" "$daemon_cert_root/privkey.pem"
        cp "$RENEWED_LINEAGE/cert.pem" "$daemon_cert_root/cert.pem"
        cp "$RENEWED_LINEAGE/chain.pem" "$daemon_cert_root/chain.pem"
        cp "$RENEWED_LINEAGE/fullchain.pem" "$daemon_cert_root/fullchain.pem"

        # Apply the proper file ownership and permissions for
        # the daemon to read its certificate and key.
        chown -R {{ h5radar_iam__user }}:{{ h5radar_iam__user }} $daemon_cert_root
        chmod 400 "$daemon_cert_root/privkey.pem"
        chmod 644 "$daemon_cert_root/cert.pem"
        chmod 644 "$daemon_cert_root/chain.pem"
        chmod 644 "$daemon_cert_root/fullchain.pem"

        # Apply new certs to service
        systemctl restart h5radar_keycloak
        ;;
    esac
done
